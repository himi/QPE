/*
 * generated by Xtext
 */
grammar InternalQPE;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.omg.qpe.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.omg.qpe.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.omg.qpe.services.QPEGrammarAccess;

}
@parser::members {
	private QPEGrammarAccess grammarAccess;

	public void setGrammarAccess(QPEGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleQPE
entryRuleQPE
:
{ before(grammarAccess.getQPERule()); }
	 ruleQPE
{ after(grammarAccess.getQPERule()); } 
	 EOF 
;

// Rule QPE
ruleQPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQPEAccess().getGroup()); }
		(rule__QPE__Group__0)
		{ after(grammarAccess.getQPEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryNamespace
entryRuleQueryNamespace
:
{ before(grammarAccess.getQueryNamespaceRule()); }
	 ruleQueryNamespace
{ after(grammarAccess.getQueryNamespaceRule()); } 
	 EOF 
;

// Rule QueryNamespace
ruleQueryNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryNamespaceAccess().getGroup()); }
		(rule__QueryNamespace__Group__0)
		{ after(grammarAccess.getQueryNamespaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathExpression
entryRulePathExpression
:
{ before(grammarAccess.getPathExpressionRule()); }
	 rulePathExpression
{ after(grammarAccess.getPathExpressionRule()); } 
	 EOF 
;

// Rule PathExpression
rulePathExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathExpressionAccess().getGroup()); }
		(rule__PathExpression__Group__0)
		{ after(grammarAccess.getPathExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryElement
entryRuleQueryElement
:
{ before(grammarAccess.getQueryElementRule()); }
	 ruleQueryElement
{ after(grammarAccess.getQueryElementRule()); } 
	 EOF 
;

// Rule QueryElement
ruleQueryElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryElementAccess().getGroup()); }
		(rule__QueryElement__Group__0)
		{ after(grammarAccess.getQueryElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifier
entryRuleQualifier
:
{ before(grammarAccess.getQualifierRule()); }
	 ruleQualifier
{ after(grammarAccess.getQualifierRule()); } 
	 EOF 
;

// Rule Qualifier
ruleQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifierAccess().getGroup()); }
		(rule__Qualifier__Group__0)
		{ after(grammarAccess.getQualifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getAlternatives()); }
		(rule__Predicate__Alternatives)
		{ after(grammarAccess.getPredicateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierPredicate
entryRuleClassifierPredicate
:
{ before(grammarAccess.getClassifierPredicateRule()); }
	 ruleClassifierPredicate
{ after(grammarAccess.getClassifierPredicateRule()); } 
	 EOF 
;

// Rule ClassifierPredicate
ruleClassifierPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierPredicateAccess().getGroup()); }
		(rule__ClassifierPredicate__Group__0)
		{ after(grammarAccess.getClassifierPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributePredicate
entryRuleAttributePredicate
:
{ before(grammarAccess.getAttributePredicateRule()); }
	 ruleAttributePredicate
{ after(grammarAccess.getAttributePredicateRule()); } 
	 EOF 
;

// Rule AttributePredicate
ruleAttributePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributePredicateAccess().getGroup()); }
		(rule__AttributePredicate__Group__0)
		{ after(grammarAccess.getAttributePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferencePredicate
entryRuleReferencePredicate
:
{ before(grammarAccess.getReferencePredicateRule()); }
	 ruleReferencePredicate
{ after(grammarAccess.getReferencePredicateRule()); } 
	 EOF 
;

// Rule ReferencePredicate
ruleReferencePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferencePredicateAccess().getGroup()); }
		(rule__ReferencePredicate__Group__0)
		{ after(grammarAccess.getReferencePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALUE
entryRuleVALUE
:
{ before(grammarAccess.getVALUERule()); }
	 ruleVALUE
{ after(grammarAccess.getVALUERule()); } 
	 EOF 
;

// Rule VALUE
ruleVALUE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALUEAccess().getAlternatives()); }
		(rule__VALUE__Alternatives)
		{ after(grammarAccess.getVALUEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLONG
entryRuleLONG
:
{ before(grammarAccess.getLONGRule()); }
	 ruleLONG
{ after(grammarAccess.getLONGRule()); } 
	 EOF 
;

// Rule LONG
ruleLONG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLONGAccess().getGroup()); }
		(rule__LONG__Group__0)
		{ after(grammarAccess.getLONGAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
		(rule__DOUBLE__Group__0)
		{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
		(rule__BOOLEAN__Alternatives)
		{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getClassifierPredicateParserRuleCall_0()); }
		ruleClassifierPredicate
		{ after(grammarAccess.getPredicateAccess().getClassifierPredicateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getAttributePredicateParserRuleCall_1()); }
		ruleAttributePredicate
		{ after(grammarAccess.getPredicateAccess().getAttributePredicateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getReferencePredicateParserRuleCall_2()); }
		ruleReferencePredicate
		{ after(grammarAccess.getPredicateAccess().getReferencePredicateParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALUE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVALUEAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getVALUEAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVALUEAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getVALUEAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVALUEAccess().getLONGParserRuleCall_2()); }
		ruleLONG
		{ after(grammarAccess.getVALUEAccess().getLONGParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getVALUEAccess().getDOUBLEParserRuleCall_3()); }
		ruleDOUBLE
		{ after(grammarAccess.getVALUEAccess().getDOUBLEParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getVALUEAccess().getBOOLEANParserRuleCall_4()); }
		ruleBOOLEAN
		{ after(grammarAccess.getVALUEAccess().getBOOLEANParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLONGAccess().getLKeyword_1_0()); }
		'L'
		{ after(grammarAccess.getLONGAccess().getLKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLONGAccess().getLKeyword_1_1()); }
		'l'
		{ after(grammarAccess.getLONGAccess().getLKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QPE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QPE__Group__0__Impl
	rule__QPE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQPEAccess().getQuerynamespacesAssignment_0()); }
	(rule__QPE__QuerynamespacesAssignment_0)
	{ after(grammarAccess.getQPEAccess().getQuerynamespacesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QPE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QPE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQPEAccess().getPathexpressionsAssignment_1()); }
	(rule__QPE__PathexpressionsAssignment_1)
	{ after(grammarAccess.getQPEAccess().getPathexpressionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryNamespace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryNamespace__Group__0__Impl
	rule__QueryNamespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryNamespaceAccess().getNamespaceKeyword_0()); }
	'namespace'
	{ after(grammarAccess.getQueryNamespaceAccess().getNamespaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryNamespace__Group__1__Impl
	rule__QueryNamespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryNamespaceAccess().getIRIAssignment_1()); }
	(rule__QueryNamespace__IRIAssignment_1)
	{ after(grammarAccess.getQueryNamespaceAccess().getIRIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryNamespace__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryNamespaceAccess().getGroup_2()); }
	(rule__QueryNamespace__Group_2__0)?
	{ after(grammarAccess.getQueryNamespaceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryNamespace__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryNamespace__Group_2__0__Impl
	rule__QueryNamespace__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryNamespaceAccess().getAsKeyword_2_0()); }
	'as'
	{ after(grammarAccess.getQueryNamespaceAccess().getAsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryNamespace__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryNamespaceAccess().getPrefixAssignment_2_1()); }
	(rule__QueryNamespace__PrefixAssignment_2_1)
	{ after(grammarAccess.getQueryNamespaceAccess().getPrefixAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathExpression__Group__0__Impl
	rule__PathExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathExpressionAccess().getIsRelativeAssignment_0()); }
	(rule__PathExpression__IsRelativeAssignment_0)
	{ after(grammarAccess.getPathExpressionAccess().getIsRelativeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathExpression__Group__1__Impl
	rule__PathExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathExpressionAccess().getSolidusKeyword_1()); }
	'/'
	{ after(grammarAccess.getPathExpressionAccess().getSolidusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathExpressionAccess().getHeadAssignment_2()); }
	(rule__PathExpression__HeadAssignment_2)
	{ after(grammarAccess.getPathExpressionAccess().getHeadAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group__0__Impl
	rule__QueryElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getGroup_0()); }
	(rule__QueryElement__Group_0__0)?
	{ after(grammarAccess.getQueryElementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group__1__Impl
	rule__QueryElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getFeatureAssignment_1()); }
	(rule__QueryElement__FeatureAssignment_1)
	{ after(grammarAccess.getQueryElementAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group__2__Impl
	rule__QueryElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getQualifierAssignment_2()); }
	(rule__QueryElement__QualifierAssignment_2)?
	{ after(grammarAccess.getQueryElementAccess().getQualifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getGroup_3()); }
	(rule__QueryElement__Group_3__0)?
	{ after(grammarAccess.getQueryElementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group_0__0__Impl
	rule__QueryElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getQuerynamespaceAssignment_0_0()); }
	(rule__QueryElement__QuerynamespaceAssignment_0_0)
	{ after(grammarAccess.getQueryElementAccess().getQuerynamespaceAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getColonColonKeyword_0_1()); }
	'::'
	{ after(grammarAccess.getQueryElementAccess().getColonColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryElement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group_3__0__Impl
	rule__QueryElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getSolidusKeyword_3_0()); }
	'/'
	{ after(grammarAccess.getQueryElementAccess().getSolidusKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryElement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryElementAccess().getNextAssignment_3_1()); }
	(rule__QueryElement__NextAssignment_3_1)
	{ after(grammarAccess.getQueryElementAccess().getNextAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Qualifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualifier__Group__0__Impl
	rule__Qualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifierAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getQualifierAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualifier__Group__1__Impl
	rule__Qualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifierAccess().getPredicateAssignment_1()); }
	(rule__Qualifier__PredicateAssignment_1)
	{ after(grammarAccess.getQualifierAccess().getPredicateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualifier__Group__2__Impl
	rule__Qualifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifierAccess().getGroup_2()); }
	(rule__Qualifier__Group_2__0)*
	{ after(grammarAccess.getQualifierAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifierAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getQualifierAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Qualifier__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualifier__Group_2__0__Impl
	rule__Qualifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifierAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getQualifierAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifierAccess().getPredicateAssignment_2_1()); }
	(rule__Qualifier__PredicateAssignment_2_1)
	{ after(grammarAccess.getQualifierAccess().getPredicateAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierPredicate__Group__0__Impl
	rule__ClassifierPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierPredicateAccess().getGroup_0()); }
	(rule__ClassifierPredicate__Group_0__0)?
	{ after(grammarAccess.getClassifierPredicateAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierPredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierPredicateAccess().getClassifierAssignment_1()); }
	(rule__ClassifierPredicate__ClassifierAssignment_1)
	{ after(grammarAccess.getClassifierPredicateAccess().getClassifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierPredicate__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierPredicate__Group_0__0__Impl
	rule__ClassifierPredicate__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierPredicateAccess().getQuerynamespaceAssignment_0_0()); }
	(rule__ClassifierPredicate__QuerynamespaceAssignment_0_0)
	{ after(grammarAccess.getClassifierPredicateAccess().getQuerynamespaceAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierPredicate__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierPredicateAccess().getColonColonKeyword_0_1()); }
	'::'
	{ after(grammarAccess.getClassifierPredicateAccess().getColonColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributePredicate__Group__0__Impl
	rule__AttributePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributePredicateAccess().getGroup_0()); }
	(rule__AttributePredicate__Group_0__0)?
	{ after(grammarAccess.getAttributePredicateAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributePredicate__Group__1__Impl
	rule__AttributePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributePredicateAccess().getAttributeAssignment_1()); }
	(rule__AttributePredicate__AttributeAssignment_1)
	{ after(grammarAccess.getAttributePredicateAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributePredicate__Group__2__Impl
	rule__AttributePredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributePredicateAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getAttributePredicateAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributePredicate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributePredicateAccess().getValueAssignment_3()); }
	(rule__AttributePredicate__ValueAssignment_3)
	{ after(grammarAccess.getAttributePredicateAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributePredicate__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributePredicate__Group_0__0__Impl
	rule__AttributePredicate__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributePredicateAccess().getQuerynamespaceAssignment_0_0()); }
	(rule__AttributePredicate__QuerynamespaceAssignment_0_0)
	{ after(grammarAccess.getAttributePredicateAccess().getQuerynamespaceAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributePredicate__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributePredicateAccess().getColonColonKeyword_0_1()); }
	'::'
	{ after(grammarAccess.getAttributePredicateAccess().getColonColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePredicate__Group__0__Impl
	rule__ReferencePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePredicateAccess().getGroup_0()); }
	(rule__ReferencePredicate__Group_0__0)?
	{ after(grammarAccess.getReferencePredicateAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePredicate__Group__1__Impl
	rule__ReferencePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePredicateAccess().getReferenceAssignment_1()); }
	(rule__ReferencePredicate__ReferenceAssignment_1)
	{ after(grammarAccess.getReferencePredicateAccess().getReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePredicate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePredicateAccess().getQualifierAssignment_2()); }
	(rule__ReferencePredicate__QualifierAssignment_2)
	{ after(grammarAccess.getReferencePredicateAccess().getQualifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePredicate__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePredicate__Group_0__0__Impl
	rule__ReferencePredicate__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePredicateAccess().getQuerynamespaceAssignment_0_0()); }
	(rule__ReferencePredicate__QuerynamespaceAssignment_0_0)
	{ after(grammarAccess.getReferencePredicateAccess().getQuerynamespaceAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePredicate__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePredicateAccess().getColonColonKeyword_0_1()); }
	'::'
	{ after(grammarAccess.getReferencePredicateAccess().getColonColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LONG__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LONG__Group__0__Impl
	rule__LONG__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLONGAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getLONGAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LONG__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LONG__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLONGAccess().getAlternatives_1()); }
	(rule__LONG__Alternatives_1)
	{ after(grammarAccess.getLONGAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__1__Impl
	rule__DOUBLE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QPE__QuerynamespacesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQPEAccess().getQuerynamespacesQueryNamespaceParserRuleCall_0_0()); }
		ruleQueryNamespace
		{ after(grammarAccess.getQPEAccess().getQuerynamespacesQueryNamespaceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QPE__PathexpressionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQPEAccess().getPathexpressionsPathExpressionParserRuleCall_1_0()); }
		rulePathExpression
		{ after(grammarAccess.getQPEAccess().getPathexpressionsPathExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__IRIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryNamespaceAccess().getIRISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getQueryNamespaceAccess().getIRISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryNamespace__PrefixAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryNamespaceAccess().getPrefixIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQueryNamespaceAccess().getPrefixIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__IsRelativeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathExpressionAccess().getIsRelativeFullStopKeyword_0_0()); }
		(
			{ before(grammarAccess.getPathExpressionAccess().getIsRelativeFullStopKeyword_0_0()); }
			'.'
			{ after(grammarAccess.getPathExpressionAccess().getIsRelativeFullStopKeyword_0_0()); }
		)
		{ after(grammarAccess.getPathExpressionAccess().getIsRelativeFullStopKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__HeadAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathExpressionAccess().getHeadQueryElementParserRuleCall_2_0()); }
		ruleQueryElement
		{ after(grammarAccess.getPathExpressionAccess().getHeadQueryElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__QuerynamespaceAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryElementAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getQueryElementAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQueryElementAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getQueryElementAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryElementAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getQueryElementAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQueryElementAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getQueryElementAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__QualifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryElementAccess().getQualifierQualifierParserRuleCall_2_0()); }
		ruleQualifier
		{ after(grammarAccess.getQueryElementAccess().getQualifierQualifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryElement__NextAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryElementAccess().getNextQueryElementParserRuleCall_3_1_0()); }
		ruleQueryElement
		{ after(grammarAccess.getQueryElementAccess().getNextQueryElementParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__PredicateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifierAccess().getPredicatePredicateParserRuleCall_1_0()); }
		rulePredicate
		{ after(grammarAccess.getQualifierAccess().getPredicatePredicateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__PredicateAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifierAccess().getPredicatePredicateParserRuleCall_2_1_0()); }
		rulePredicate
		{ after(grammarAccess.getQualifierAccess().getPredicatePredicateParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__QuerynamespaceAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierPredicateAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getClassifierPredicateAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getClassifierPredicateAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getClassifierPredicateAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierPredicate__ClassifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierPredicateAccess().getClassifierEClassifierCrossReference_1_0()); }
		(
			{ before(grammarAccess.getClassifierPredicateAccess().getClassifierEClassifierIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getClassifierPredicateAccess().getClassifierEClassifierIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getClassifierPredicateAccess().getClassifierEClassifierCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__QuerynamespaceAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributePredicateAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getAttributePredicateAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributePredicateAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getAttributePredicateAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributePredicateAccess().getAttributeEAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAttributePredicateAccess().getAttributeEAttributeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributePredicateAccess().getAttributeEAttributeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAttributePredicateAccess().getAttributeEAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePredicate__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributePredicateAccess().getValueVALUEParserRuleCall_3_0()); }
		ruleVALUE
		{ after(grammarAccess.getAttributePredicateAccess().getValueVALUEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__QuerynamespaceAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencePredicateAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getReferencePredicateAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferencePredicateAccess().getQuerynamespaceQueryNamespaceIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getReferencePredicateAccess().getQuerynamespaceQueryNamespaceCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__ReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencePredicateAccess().getReferenceEReferenceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getReferencePredicateAccess().getReferenceEReferenceIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferencePredicateAccess().getReferenceEReferenceIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getReferencePredicateAccess().getReferenceEReferenceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePredicate__QualifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencePredicateAccess().getQualifierQualifierParserRuleCall_2_0()); }
		ruleQualifier
		{ after(grammarAccess.getReferencePredicateAccess().getQualifierQualifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
